<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADHx8dCxcXFKby8vAPAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADNzc1pzs7O08rKypfGxsY8wcHBCMbGxgCurq4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADf398E2NjYa9XV1fPQ0NDxy8vLsMfHx1XDw8MS////ALe3
        twAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZ2dkA2dnZA9jY2GnY2Njx1tbW/9LS
        0vjNzc3IyMjIcMTExCG6uroCv7+/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAAH///////AAAH//////8AAAH//////wAAgD//////AADAD/////8AAOAD
        /////wAA8AB/////AAD4AB////8AAPwAB////wAA/gAA////AAD/AAB///8AAJ+AAH///wAAn8AAP///
        AACP4AA8f/8AAI/wADx//wAAh/gAOH//AACH/AAw//8AAAP+ACH//wAAA/8AQ///AAADgIAA//8AAAAA
        wAB//wAAAAHgAD//AAAAB/AAH/8AAAAP+AAP/wAAAD/wAAf/AAAAf+AAA/8AAAD/wAAB/wAAA/+EAAD/
        AAAH/w4AAH8AAB/+HwAAPwAAP/4/gAAfAAD////AAA8AAP///+AABwAA////8AADAAD////4AAEAAP//
        //wAAAAA/////gAAAAD/////gAAAAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>